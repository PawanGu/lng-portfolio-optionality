# LNG Portfolio Optionality (LSMC + Hedging)

**Price LNG swing optionality and hedge it.** This repo simulates correlated HH/TTF/JKM prices, prices a swing contract via Least‑Squares Monte Carlo, and shows two complementary hedging lenses—(A) cash‑flow hedging via a *level → futures strip* and (B) mark‑to‑market (M2M) delta hedging from LSMC gradients. Includes out‑of‑sample (OOS) validation and basic tail‑risk stats (VaR/ES).

---

## What this repo demonstrates

* **Volumetric optionality**: daily and cumulative min/max lift constraints (typical in LNG swing/SPAs).
* **Pricing**: LSMC with a compact basis and discrete action grid for daily volumes.
* **Hedging**:

  * **Cash‑flow hedge (level→strip)**: regress daily cashflows on **price levels**, convert betas to a **backward cumulative futures strip**; evaluate PnL variance/ES of *realized cashflows*.
  * **M2M delta hedge (optional)**: differentiate the LSMC continuation value; evaluate replication error variance.
* **Risk**: variance, VaR, ES; in‑sample and OOS comparisons; transaction costs & lot rounding knobs.

---

## Quick start

```bash
pip install -r requirements.txt
export PYTHONPATH=.
python run_demo.py          # basic pricing + histogram plot
python run_demo_oos.py      # OOS hedge validation (prints VaR/ES & effectiveness)
```

Outputs:

* Console: summary dicts for mean/stdev/VaR/ES and **HedgeEffectiveness\_var**.
* Plots: `figs/pnl_hist.png` (if generated by `run_demo.py`).

> Python ≥3.9 recommended.

---

## Repository structure

```
.
├─ run_demo.py                # price swing, simple hedge comparison, plot
├─ run_demo_oos.py            # out-of-sample (train/test) hedge validation
├─ simulators.py              # correlated GBM for HH/TTF/JKM
├─ swing.py                   # SwingSpec & state/feasibility logic
├─ lsmc.py                    # LSMC pricer (+ optional analytic deltas)
├─ level_strip_hedge.py       # cash-flow hedge via level→futures strip
├─ hedging/
│  ├─ __init__.py
│  ├─ risk_metrics.py         # mean/stdev/VaR/ES helpers
│  └─ regression_hedge.py     # (optional) daily ΔS regression hedge
├─ src/viz/plots.py           # PnL histogram helper
├─ requirements.txt
└─ README.md
```

---

## Model at a glance

* **Price drivers**: Joint HH/TTF/JKM simulated as correlated GBMs (annualized vols & correlation matrix are configurable). Extend to OU/seasonality/term structure as desired.
* **Contract**: `SwingSpec(T, q_min, q_max, Q_min, Q_max, index, destination, spread_addon, fee)`.
* **Payoff**: daily cashflow `q_t * (Dest_t − (Index_t + spread_addon) − fee)` subject to daily/cumulative volume constraints.

---

## LSMC pricing (swing)

1. **State** at day *t*: `(Index_t, Dest_t, remaining_quota_frac, t/T, basis_spread)`.
2. **Actions**: choose volume from a small grid (e.g., {lo, mid, hi}) clipped by feasibility from `SwingState`.
3. **Regression**: approximate continuation with a compact polynomial basis; backward‑induct to select volumes and record cashflows.
4. **Value**: average path cashflows. Optionally compute **analytic deltas** via basis gradients (for M2M hedging of continuation value).

**Notes**

* Increase action buckets (e.g., 5–7) for smoother exposures/Greeks.
* Add penalties if `Q_min` not met, shipping/regas caps, weekend rules, etc.

---

## Hedging methods

### A) Cash‑flow hedge via *level → futures strip* (default in `run_demo_oos.py`)

Cashflows depend on **price levels**; futures PnL depends on **price changes**. If
$\text{CF}_t \approx a_t + b_t^{idx} S_t^{idx} + b_t^{dst} S_t^{dst}$, then using
$S_t = S_0 + \sum_{u\le t} \Delta S_u$ implies the replicating futures positions are the **negative backward cumulative betas**:
$H_u^{idx} = -\sum_{t\ge u} b_t^{idx}, \quad H_u^{dst} = -\sum_{t\ge u} b_t^{dst}.$

Implementation (`level_strip_hedge.py`):

1. Regress each day’s cashflow on levels (with intercept) to get $b_t$.
2. Convert $b_t$ to a per‑day futures **position strip** via backward cumsum.
3. Apply strip to dS to obtain hedge PnL; compare **unhedged vs hedged** cashflow sums.

**Knobs**: `two_assets=True/False` (index + destination), `ridge`, `tc_bps`, `lot`.

### B) M2M delta hedge (optional extension)

Differentiate the LSMC continuation value: $\Delta_t \approx \partial V_t/\partial S$. Hedge the **value process change** (replication error), not realized cashflows. Useful for MTM risk but targets a different metric.

---

## Out‑of‑sample (OOS) validation

`run_demo_oos.py` splits scenarios into **train/test**:

* Train: fit level→strip positions.
* Test: apply fixed strip; report **variance reduction** and **ES/VaR** with transaction costs.

This separates modeling/overfit from actual hedge robustness.

---

## Configuration

Key parameters to tune in `run_demo*.py`:

* **Simulation**: drifts/vols/correlation, `dt`, seed, horizon `T`, number of paths.
* **Contract**: `q_min`, `q_max`, `Q_min`, `Q_max`, `index`, `destination`, `spread_addon`, `fee`.
* **Hedging**: `two_assets`, `ridge`, `tc_bps`, `lot`.

---

## Typical outputs

* **Unhedged vs Hedged**: expect material reduction in variance and ES for the **cashflow** hedge, especially with two‑leg strip (index & destination). Exact numbers depend on your parameters/seed.
* A PnL histogram and console summaries like:

  * `{ 'mean': ..., 'stdev': ..., 'VaR_5%': ..., 'ES_5%': ... }`
  * `{ 'HedgeEffectiveness_var': ... }` (higher is better).

---

## Extensions (ideas to try next)

* **Diversion optionality**: choose destination (TTF vs JKM) each day.
* **Shipping & regas constraints**: voyage lags, send‑out caps, maintenance days.
* **Historical calibration**: fit vols/corr to HH/TTF/JKM; include seasonality & term structure.
* **Basis hedges**: explicit JKM–TTF spread instruments.
* **Inventory & storage**: stateful stock, carry costs, inventory limits.
* **Risk**: add PnL attribution, scenario shocks, stress sets.

---

## How to talk about it (interview guide)

* *“I priced volumetric flexibility with LSMC under correlated hubs, then showed two hedging perspectives. My first attempt used M2M ∆ but evaluated cashflow variance—mismatch. I corrected it by mapping level exposure to a futures strip (negative backward cumulative betas). Out‑of‑sample with costs still shows strong variance/ES reduction.”*

---

## License & disclaimer

* Suggested license: **MIT** (edit as needed).
* This is an educational prototype; not investment advice; no real LNG operational constraints are modeled unless you add them.
